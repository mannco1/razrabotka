#include <iostream>
#include <cmath>
#include"Header.h"

using namespace std;

























void type1::Get_answer() {
    cout << "Ответом является любое значение Х" << endl;
}
void type1::show() {
    cout << "Уравнение 0 = 0" << endl;
}



type2::type2(double a1) {
    A = a1;
}
void type2::Get_answer() {
    cout << "Ответом является Х = 0" << endl;
}
void type2::show() {
    cout << "Уравнение " << A << "*x^2 = 0" << endl;
}



type3::type3(double c1) {
    C = c1;
}
void type3::Get_answer() {
    cout << "Корней нет" << endl;
}
void type3::show() {
    cout << C << " = 0" << endl;
}



type4::type4(double a1, double c1) {
    A = a1;
    C = c1;
}
void type4::Get_answer() {
    double k = ((-1) * C) / A;
    if (k >= 0) {
        double x1 = sqrt(k);
        double x2 = sqrt(k) * (-1);
        cout << "Корни уравнения: " << endl << "X1 = " << x1 << endl << "X2 = " << x2 << endl;
    }
    else {
        cout << "Корней нет" << endl;
    }
}
void type4::show() {
    cout << "Уравнение " << A << "*x^2 + " << C << " = 0" << endl;
}
void type4::Get_answer_podbor() {
    if ((((-1) * C) / A) < 0) {
        cout << "Корней методом подбора нет" << endl;
    }
    else {
        double min = abs(0 - A * (-20) * (-20) - C);
        double x = -20;
        for (double i = -20; i < 20.01; i = i + 0.01) {
            double temp = abs(0 - A * (i) * (i)-C);
            if (temp < min) {
                min = temp;
                x = i;
            }
        }
        cout << "Приближенно, один из корней уравнения: " << x << endl;
    }
}



type5::type5(double b1, double c1) {
    B = b1;
    C = c1;
}
void type5::Get_answer() {
    cout << "Корень уравнения: " << (-1) * (C / B) << endl;
}
void type5::show() {
    cout << "Уравнение " << B << "*x + " << C << " = 0" << endl;
}
void type5::Get_answer_podbor() {
    double min = abs(0 - B * (-20) - C);
    double x = -20;
    for (double i = -20; i < 20.01; i = i + 0.01) {
        double temp = abs(0 - B * (i)-C);
        if (temp < min) {
            min = temp;
            x = i;
        }
    }
    cout << "Приближенно, один из корней уравнения: " << x << endl;
}



type6::type6(double a1, double b1, double c1) {
    A = a1;
    B = b1;
    C = c1;
}
void type6::Get_answer() {
    double D = B * B - 4 * A * C;
    if (D < 0) {
        cout << "Уравнение не имеет действительных корней" << endl;
    }
    else {
        if (D == 0) {
            double x = ((-1) * B - sqrt(D)) / (2 * A);
            cout << "Корень уравнения: " << x << endl;
        }
        else {
            double x1 = ((-1) * B - sqrt(D)) / (2 * A);
            double x2 = ((-1) * B + sqrt(D)) / (2 * A);
            cout << "Корни уравнения: " << endl;
            cout << "X1 = " << x1 << endl << "X2 = " << x2 << endl;
        }
    }
}
void type6::show() {
    cout << "Уравнение " << A << "*x^2 + " << B << "*x + " << C << " = 0" << endl;
}
void type6::Get_answer_podbor() {
    double D = B * B - 4 * A * C;
    if (D < 0) {
        cout << "Уравнение не имеет действительных корней" << endl;
    }
    else {
        double min = abs(0 - A * (-20) * (-20) - B * (-20) - C);
        double x = -20;
        for (double i = -20; i < 20.01; i = i + 0.01) {
            double temp = abs(0 - A * (i) * (i)-B * i - C);
            if (temp < min) {
                min = temp;
                x = i;
            }
        }
        cout << "Приближенно, один из корней уравнения: " << x << endl;
    }
}



type7::type7(double b1) {
    B = b1;
}
void type7::Get_answer() {
    cout << "Корень уравнения: x = 0" << endl;
}
void type7::show() {
    cout << "Уравнение " << B << "*x = 0" << endl;
}



type8::type8(double a1, double b1) {
    A = a1;
    B = b1;
}
void type8::Get_answer() {
    double x = ((-1) * B) / A;
    cout << "Корни уравнения: " << endl;
    cout << "X1 = 0" << endl << "X2 = " << x << endl;
}
void type8::show() {
    cout << "Уравнение " << A << "*x^2 + " << B << "*x = 0 " << endl;
}
void type8::Get_answer_podbor() {
    double min = abs(0 - A * (-20) * (-20) - B * (-20));
    double x = -20;
    for (double i = -20; i < 20.01; i = i + 0.01) {
        if (i != 0) {
            double temp = abs(0 - A * i * i - B * (i));
            if (temp < min) {
                min = temp;
                x = i;
            }
        }
    }
    cout << "Приближенно, один из корней уравнения: " << x << endl;
}



void inter::Level1() {
    double A, B, C;

    while (true) {
        std::cout << "Выберите действие:" << std::endl;
        std::cout << "1. Выберать тип уравнения" << std::endl;
        std::cout << "2. Выход" << std::endl;
        std::cout << "Выбор: ";

        int choice;
        std::cin >> choice;


        if (choice == 1) {
            Level2();
        }
        
       
        else if (choice == 2) {
            std::cout << "Выход из программы." << std::endl;
            return;
        }
        
    }
};

void inter::Level2() {

    // Логика уровня 2

    while (true) {
        std::cout << "Выберите действие:" << std::endl;
        cout << "1. уравнение типа: 0=0 " << std::endl;
        cout << "2. уравнение типа: Ax^2 = 0 " << std::endl;
        cout << "3. уравнение типа: x^2 + C = 0 " << std::endl;
        cout << "4. уравнение типа: Ax^2+ x = 0" << std::endl;
        cout << "5. уравнение типа: x^2 + B*x + C = 0" << std::endl;
        cout << "6. уравнение типа: Ax^2 + B*x + C = 0" << std::endl;
        cout << "7. уравнение типа: x^2+Bx = 0" << std::endl;
        cout << "8. уравнение типа: Ax^2+ Bx=0" << std::endl;
        cout << endl;
        cout << "0.Назад" << endl;
        cout << endl;
        std::cout << "Выбор: ";

        int choice;
        std::cin >> choice;
        double A,B,C ;
       


        if (choice == 1) {
            cout << "Введите коэффецент: " << endl;
            cin >> A;
            type1 eq1;
            eq1.show();
            eq1.Get_answer();
            break;
            cout << endl; 
            cout << endl;
        }
        else if (choice == 2) {
            cout << "Введите коэффецент:A " << endl;
            cin >> A;
            type2 eq2(A);
            eq2.show();
            eq2.Get_answer();
            break;
            cout << endl;
            cout << endl;
        }
        else if (choice == 3) {
            cout << "Введите коэффецент: C" << endl;
            cin >> C;
            type3 eq3(C);
            eq3.show();
            eq3.Get_answer();
            break;
            cout << endl;
            cout << endl;

        }
        else if (choice == 4) {
            cout << "Введите коэффецент: A and C " << endl;
            cin >> A;
            cin >> C;
            type4 eq4(A,C);
            eq4.show();
            eq4.Get_answer();
            eq4.Get_answer_podbor();
            break;
            cout << endl;
            cout << endl;

        }
        else if (choice == 5) {
            cout << "Введите коэффецент:B and C " << endl;
            cin >> B;
            cin >> C;
            type5 eq5(B,C);
            eq5.show();
            eq5.Get_answer();
            eq5.Get_answer_podbor();
            break;
            cout << endl;
            cout << endl;

        }
        else if (choice == 6) {
            cout << "Введите коэффецент:A,B and C " << endl;
            cin >> A;
            cin >> B;
            cin >> C;
            type6 eq6(A,B,C);
            eq6.show();
            eq6.Get_answer();
            eq6.Get_answer_podbor();
            break;
            cout << endl;
            cout << endl;

        }
        else if (choice == 7) {
            cout << "Введите коэффецент:B " << endl;
            cin >> B;
            type7 eq7(B);
            eq7.show();
            eq7.Get_answer();
            break;
            cout << endl;
            cout << endl;

        }
        else if (choice == 8) {
            cout << "Введите коэффецент:A and B " << endl;
            cin >> A;
            cin >> B;
            type8 eq8(A,B);
            eq8.show();
            eq8.Get_answer();
            eq8.Get_answer_podbor();
            break;
            cout << endl;
            cout << endl;

        }
        else {
            std::cout << "Неверный выбор. Попробуйте еще раз." << std::endl;
        }
    }
};